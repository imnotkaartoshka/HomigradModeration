import discord
from discord.ext import commands
import socket
import platform
import requests
from datetime import datetime
import os
import asyncio
from colorama import Fore, Back, Style, init

import tkinter as tk
from tkinter import messagebox

import pystray
from PIL import Image
import threading

init()

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
TOKEN_FILE = 'token.txt'
HOSTNAME_LIST_URL = 'https://raw.githubusercontent.com/imnotkaartoshka/HomigradModeration/refs/heads/main/authorizedpc'

# ID –¥–ª—è –ª–æ–≥–æ–≤
LOG_SERVER_ID = 1338512816818229289  # –°–µ—Ä–≤–µ—Ä –¥–ª—è –ª–æ–≥–æ–≤
LOG_CHANNEL_ID = 1402384154313887767  # –ö–∞–Ω–∞–ª –¥–ª—è –ª–æ–≥–æ–≤
ADMIN_ID = 678157951977914378  # ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

# ID –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ç—Ä–µ–¥–æ–≤
TRACK_SERVER_ID = 1338512816818229289  # –°–µ—Ä–≤–µ—Ä –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
TRACK_CHANNEL_ID = 1402355254908944475  # –ö–∞–Ω–∞–ª –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
NOTIFY_USER_IDS = [  # –°–ø–∏—Å–æ–∫ ID –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    678157951977914378,
    721685738361454592
]

def load_token():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ —Ñ–∞–π–ª–∞"""
    try:
        with open(TOKEN_FILE, 'r') as file:
            token = file.read().strip()
            if not token:
                raise ValueError("–§–∞–π–ª —Ç–æ–∫–µ–Ω–∞ –ø—É—Å—Ç")
            return token
    except FileNotFoundError:
        print(f"[!] –§–∞–π–ª {TOKEN_FILE} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        emergency_shutdown()
    except Exception as e:
        print(f"[!] –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞: {str(e)}")
        emergency_shutdown()

def emergency_shutdown():
    """–≠–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã"""
    print("[!] –ù–µ–∑–Ω–∞—é –∫–∞–∫ —Ç—ã –∑–∞—Å—Ç–∞–≤–∏–ª —ç—Ç–æ —Å—Ä–∞–±–æ—Ç–∞—Ç—å. –ù–∞–ø–∏—à–∏ @ocyq")
    os._exit(1)



TOKEN = load_token()
print(Fore.GREEN + "[ Launcher ] –¢–æ–∫–µ–Ω –∑–∞–≥—Ä—É–∂–µ–Ω.. –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É –∑–∞–ø—É—Å–∫–∞." + Style.RESET_ALL)
print("")

intents = discord.Intents.default()
intents.messages = True
intents.guilds = True
intents.message_content = True

bot = commands.Bot(command_prefix='!', intents=discord.Intents.all())

async def check_hostname_allowed(hostname):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–∑—Ä–µ—à—ë–Ω –ª–∏ —Ö–æ—Å—Ç"""
    try:
        response = requests.get(HOSTNAME_LIST_URL, timeout=5)
        if response.status_code == 200:
            allowed_hostnames = [name.strip().lower() for name in response.text.splitlines()]
            return hostname.lower() in allowed_hostnames
        return False
    except Exception as e:
        print(f"[!] –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")
        return False


def get_machine_info():
    """–°–æ–±–∏—Ä–∞–µ—Ç —Å–∏—Å—Ç–µ–º–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é"""
    try:
        hostname = socket.gethostname()
        local_ip = socket.gethostbyname(hostname)
        try:
            external_ip = requests.get('https://api.ipify.org', timeout=3).text
        except:
            external_ip = "–ù–µ –¥–æ—Å—Ç—É–ø–µ–Ω"
        
        return {
            "hostname": hostname,
            "local_ip": local_ip,
            "external_ip": external_ip,
            "os": f"{platform.system()} {platform.release()}",
            "time": datetime.now().strftime('%Y-%m-%d %H:%M:%S')
        }
    except Exception as e:
        return {"error": str(e)}

async def send_log_message(message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª–æ–≥-–∫–∞–Ω–∞–ª"""
    try:
        channel = bot.get_channel(LOG_CHANNEL_ID)
        if channel:
            await channel.send(message)
    except Exception as e:
        print(f"[!] –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
        emergency_shutdown()

@bot.event
async def on_ready():
    print(Fore.GREEN + "[ INFO ] –ò–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —Å–ª–æ–≤–∞ –±–æ—Ç–∞ –≤—ã—à–µ, –º–Ω–µ –ª–µ–Ω—å –∏—Ö —É–±–∏—Ä–∞—Ç—å.." + Style.RESET_ALL)
    print(f"")
    print(Fore.GREEN + "[ INFO ] –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã—Ö —Ö–æ—Å—Ç–µ—Ä–æ–≤..." + Style.RESET_ALL)
    print(f"")

    machine_info = get_machine_info()
    
    if "error" in machine_info:
        error_msg = f"–û—à–∏–±–∫–∞ –¥–∞–Ω–Ω—ã—Ö: {machine_info['error']}"
        print(error_msg)
        await send_log_message(error_msg)
        emergency_shutdown()
    
    is_allowed = await check_hostname_allowed(machine_info["hostname"])
    
    if not is_allowed:
        
        alert_msg = (
            f"üö® **–ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å –Ω–µ—Ä–∞–∑—Ä–µ—à—ë–Ω–Ω–æ–≥–æ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞!**\n"
            f"–•–æ—Å—Ç: `{machine_info['hostname']}`\n"
            f"IP: `{machine_info['local_ip']}`\n"
            f"–í—Ä–µ–º—è: `{machine_info['time']}`"
            f"–ü–∏–Ω–≥: <@678157951977914378>`"
        )
        emergency_shutdown()
        try:
            admin = await bot.fetch_user(ADMIN_ID)
            await admin.send(alert_msg)
        except Exception as e:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É: {e}" + Style.RESET_ALL)
        
        await send_log_message(alert_msg)
        emergency_shutdown()
    
    print(Fore.GREEN + "[ INFO ] –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!" + Style.RESET_ALL)
    print("                         ")
    print("                        __   ")
    print("   ____ ___  ____ _____/ /__ ")
    print("  / __ `__ \/ __ `/ __  / _ \ ")
    print(" / / / / / / /_/ / /_/ /  __/")
    print("/_/ /_/ /_/\__,_/\__,_/\___/ ")
    print("                             ")
    print("    __         ")
    print("   / /_  __  __")
    print("  / __ \/ / / /")
    print(" / /_/ / /_/ / ")
    print("/_.___/\__, /  ")
    print("      /____/   ")
    print("                         ")
    print("                          __  ")
    print("  ____  _______  ______ _/ /__")
    print(" / __ \/ ___/ / / / __ `/ //_/")
    print("/ /_/ / /__/ /_/ / /_/ / ,<   ")
    print("\____/\___/\__, /\__,_/_/|_|  ")
    print("          /____/              ")
    print("                         ")
    print(f"")
    await send_log_message(
        f"üü¢ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω —Å —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω–æ–≥–æ —Ö–æ—Å—Ç–∞\n"
        f"–•–æ—Å—Ç: `{machine_info['hostname']}`\n"
        f"–í—Ä–µ–º—è: `{machine_info['time']}`"
        f"IP: `{machine_info['local_ip']}`\n"
    )

@bot.event
async def on_thread_create(thread):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤—ã—Ö —Ç—Ä–µ–¥–æ–≤"""
    print("[ NOTIFICATION ] –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π —Ç—Ä–µ–¥, –æ—Ç–ø—Ä–∞–≤–ª—è—é —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Discord")
    print(" ")
    if thread.guild.id == TRACK_SERVER_ID and thread.parent_id == TRACK_CHANNEL_ID:
        try:
            message = (
                f"üìå **–°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π —Ç—Ä–µ–¥**\n"
                f"**–°–µ—Ä–≤–µ—Ä:** {thread.guild.name}\n"
                f"**–ö–∞–Ω–∞–ª:** {thread.parent.name}\n"
                f"**–¢—Ä–µ–¥:** {thread.name}\n"
                f"**–ê–≤—Ç–æ—Ä:** {thread.owner.mention}\n"
                f"**–°—Å—ã–ª–∫–∞:** {thread.jump_url}"
            )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –∏–∑ —Å–ø–∏—Å–∫–∞
            for user_id in NOTIFY_USER_IDS:
                try:
                    user = await bot.fetch_user(user_id)
                    await user.send(message)
                except Exception as e:
                    print(f"‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
            
            # –õ–æ–≥–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ
            await send_log_message(
                f"üîî –ù–æ–≤—ã–π —Ç—Ä–µ–¥ –≤ {thread.guild.name}\n"
                f"–°–æ–∑–¥–∞–Ω: {thread.name}\n"
                f"–ê–≤—Ç–æ—Ä: {thread.owner}"
            )
            
        except Exception as e:
            error_msg = f"‚ö† –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç—Ä–µ–¥–∞: {str(e)}"
            print(error_msg)
            await send_log_message(error_msg)

async def startup_check():
    """–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º"""
    try:
        machine_info = get_machine_info()
        if "error" in machine_info:
            emergency_shutdown()
        
        if not await check_hostname_allowed(machine_info["hostname"]):
            emergency_shutdown()
    except:
        emergency_shutdown()

bot.run(TOKEN)
