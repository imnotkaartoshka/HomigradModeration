import discord
from discord.ext import commands
import socket
import platform
import requests
from datetime import datetime
import sys
import os
import asyncio

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
TOKEN_FILE = 'token.txt'  # –§–∞–π–ª —Å —Ç–æ–∫–µ–Ω–æ–º –≤ —Ç–æ–π –∂–µ –ø–∞–ø–∫–µ
HOSTNAME_LIST_URL = 'https://raw.githubusercontent.com/imnotkaartoshka/HomigradModeration/refs/heads/main/authorizedpc'

def load_token():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ —Ñ–∞–π–ª–∞"""
    try:
        with open(TOKEN_FILE, 'r') as file:
            token = file.read().strip()
            if not token:
                raise ValueError("–§–∞–π–ª —Ç–æ–∫–µ–Ω–∞ –ø—É—Å—Ç")
            return token
    except FileNotFoundError:
        print(f"‚ùå –§–∞–π–ª {TOKEN_FILE} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print(f"–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª {TOKEN_FILE} –≤ —Ç–æ–π –∂–µ –ø–∞–ø–∫–µ –∏ –ø–æ–º–µ—Å—Ç–∏—Ç–µ —Ç—É–¥–∞ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞")
        emergency_shutdown()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞: {str(e)}")
        emergency_shutdown()

def emergency_shutdown():
    """–≠–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã"""
    print("‚õî –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...")
    os._exit(1)

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
TOKEN = load_token()

# –û—Å—Ç–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
SERVER_ID = 1338512816818229289
CHANNEL_ID = 1402384154313887767
ADMIN_ID = 678157951977914378

bot = commands.Bot(command_prefix='!', intents=discord.Intents.all())

async def check_hostname_allowed(hostname):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–∑—Ä–µ—à—ë–Ω –ª–∏ —Ö–æ—Å—Ç"""
    try:
        response = requests.get(HOSTNAME_LIST_URL, timeout=5)
        if response.status_code == 200:
            allowed_hostnames = [name.strip().lower() for name in response.text.splitlines()]
            return hostname.lower() in allowed_hostnames
        return False
    except Exception as e:
        print(f"‚ö† –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ö–æ—Å—Ç–∞: {e}")
        return False

def get_machine_info():
    """–°–æ–±–∏—Ä–∞–µ—Ç —Å–∏—Å—Ç–µ–º–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é"""
    try:
        hostname = socket.gethostname()
        local_ip = socket.gethostbyname(hostname)
        try:
            external_ip = requests.get('https://api.ipify.org', timeout=3).text
        except:
            external_ip = "–ù–µ –¥–æ—Å—Ç—É–ø–µ–Ω"
        
        return {
            "hostname": hostname,
            "local_ip": local_ip,
            "external_ip": external_ip,
            "os": f"{platform.system()} {platform.release()}",
            "time": datetime.now().strftime('%Y-%m-%d %H:%M:%S')
        }
    except Exception as e:
        return {"error": str(e)}

@bot.event
async def on_ready():
    print("[ INFO ] –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã—Ö —Ö–æ—Å—Ç–æ–≤...")
    
    machine_info = get_machine_info()
    
    if "error" in machine_info:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö: {machine_info['error']}")
        emergency_shutdown()
    
    is_allowed = await check_hostname_allowed(machine_info["hostname"])
    
    if not is_allowed:
        try:
            
            admin = await bot.fetch_user(ADMIN_ID)
            await admin.send(
                f"üö® **–ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å –Ω–µ—Ä–∞–∑—Ä–µ—à—ë–Ω–Ω–æ–≥–æ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞!**\n"
                f"–•–æ—Å—Ç: `{machine_info['hostname']}`\n"
                f"IP: `{machine_info['local_ip']}`\n"
                f"–í—Ä–µ–º—è: `{machine_info['time']}`"
                f"–ü–∏–Ω–≥ –æ—Å—è–∫–∞: <@678157951977914378> "
            )
            emergency_shutdown()
        except Exception as e:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: {e}")
            emergency_shutdown()
    
    print("[ SUCCESS ] –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    channel = bot.get_channel(CHANNEL_ID)
    if channel:
        await channel.send(
            f"üü¢ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω —Å —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω–æ–≥–æ —Ö–æ—Å—Ç–∞\n"
            f"–•–æ—Å—Ç: `{machine_info['hostname']}`\n"
            f"IP: `{machine_info['local_ip']}`\n"
            f"–í—Ä–µ–º—è: `{machine_info['time']}`"
        )

@bot.event
async def on_thread_create(thread):
    if thread.guild.id == SERVER_ID and thread.parent_id == CHANNEL_ID:
        # –í–∞—à–∞ –ª–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç—Ä–µ–¥–æ–≤
        pass

async def startup_check():
    try:
        machine_info = get_machine_info()
        if "error" in machine_info:
            emergency_shutdown()
        
        if not await check_hostname_allowed(machine_info["hostname"]):
            emergency_shutdown()
    except:
        emergency_shutdown()

SERVER_ID2 = 1338512816818229289  # ID –≤–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
CHANNEL_ID2 = 1402355254908944475  # ID –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º–æ–≥–æ –∫–∞–Ω–∞–ª–∞
USER_IDS = [678157951977914378, 721685738361454592]  # ID –¥–≤—É—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π

intents = discord.Intents.default()
intents.messages = True
intents.guilds = True
intents.message_content = True

bot = commands.Bot(command_prefix='!', intents=intents)

async def send_notification(user, thread, channel):
    try:
        await user.send(
            f"üö® **–ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å —Å–æ–∑–¥–∞–Ω!**\n"
            f"**–°–µ—Ä–≤–µ—Ä:** {thread.guild.name}\n"
            f"**–ö–∞–Ω–∞–ª:** {channel.name}\n"
            f"**–¢—Ä–µ–¥:** {thread.name}\n"
            f"**–°—Å—ã–ª–∫–∞:** {thread.jump_url}"
        )
        print(f"[DONE]: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.name}")
    except discord.Forbidden:
        print(f"[ERR]: –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.name} \n(ocyq p.s. –û—Ç–∫—Ä–æ–π—Ç–µ –ª–∏—á–∫—É)")
    except Exception as e:
        print(f"[ERR]: –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.name}: {e}")

@bot.event
async def on_ready():
    print(f'[LaunchService]: –ë–æ—Ç {bot.user} –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!')
    print(f'[LaunchService]: –û—Ç—Å–ª–µ–∂–∏–≤–∞—é —Ç—Ä–µ–¥—ã –≤ –∫–∞–Ω–∞–ª–µ {CHANNEL_ID} –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ {SERVER_ID}')
    print(f'[LaunchService]: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º!')

@bot.event
async def on_thread_create(thread):
    if thread.guild.id == SERVER_ID and thread.parent_id == CHANNEL_ID:
        channel = bot.get_channel(CHANNEL_ID)
        for user_id in USER_IDS:
            try:
                user = await bot.fetch_user(user_id)
                await send_notification(user, thread, channel)
            except discord.NotFound:
                print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")

bot.run(TOKEN)
